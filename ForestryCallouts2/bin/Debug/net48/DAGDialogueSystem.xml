<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DAGDialogueSystem</name>
    </assembly>
    <members>
        <member name="T:DAGDialogueSystem.DialogueFunctions">
            <summary>
            Class used to iterate through dialogue.
            </summary>
        </member>
        <member name="F:DAGDialogueSystem.DialogueFunctions.DialogueMenu">
            <summary>
            Menu used for all dialogue options.
            </summary>
        </member>
        <member name="M:DAGDialogueSystem.DialogueFunctions.IterateDialogue(LSPD_First_Response.Mod.Callouts.Callout,DAGDialogueSystem.DirectedAcyclicGraph.Node)">
            <summary>
            Iterates through dialogue starting with the root node.
            </summary>
            <param name="calloutName"> used for logging purposes </param>
            <param name="n"> root node </param>
        </member>
        <member name="M:DAGDialogueSystem.DialogueFunctions.DisplayData(System.String)">
            <summary>
            Displays the node data in a subtitle.
            </summary>
            <param name="s"> the node's data </param>
        </member>
        <member name="M:DAGDialogueSystem.DialogueFunctions.Clean">
            <summary>
            Sets the global class variables back to default.
            </summary>
        </member>
        <member name="T:DAGDialogueSystem.DirectedAcyclicGraph">
            <summary>
            Main class for DAGDialogueSystem
            </summary>
        </member>
        <member name="T:DAGDialogueSystem.DirectedAcyclicGraph.Node">
            <summary>
            The node class for the Directed Acyclic Graph.
            </summary>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.#ctor(DAGDialogueSystem.NodeTypes.Type,System.String)">
            <summary>
            Makes a new node in memory
            </summary>
            <param name="type"> the type of node, NodeTypes.Type </param>
            <param name="data"> dialogue string </param>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.#ctor(DAGDialogueSystem.NodeTypes.Type,System.Action)">
            <summary>
            Makes a new action node
            </summary>
            <param name="type"> the type of node, NodeTypes.Type </param>
            <param name="action"> method name wanting to run if this node is chosen randomly or directly chosen if its the only edge.</param>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetNType">
            <summary>
            Gets the node type.
            </summary>
            <returns>Int</returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetData">
            <summary>
            Gets the node data.
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetEdges">
            <summary>
            Gets node edges.
            </summary>
            <returns>List</returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetNextNode">
            <summary>
            Gets the next node in the graph.
            </summary>
            <returns> Receiver of chosen edge </returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.AddNode(DAGDialogueSystem.NodeTypes.Type,System.String)">
            <summary>
            Adds edge between this node and a new node with the type and data params.
            If multiple AddNodes take place on the same node. The top (most left) node will be
            the first edge.
            </summary>
            <param name="type"> the type of node, NodeTypes.Type </param>
            <param name="data">dialogue line in string format</param>
            <returns> Node </returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.AddNode(System.Action)">
            <summary>
            Adds a edge between this node and a new action node.
            </summary>
            <param name="method"> the method that needs to be ran</param>
            <returns></returns>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.ConnectTo(DAGDialogueSystem.DirectedAcyclicGraph.Node)">
            <summary>
            Connects this node and target node with edge.
            </summary>
            <param name="target"> node that needs connecting </param>
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.EdgesCount">
            returns the amount of edges that node has.
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetFirstEdge">
            returns the first edge of node.
        </member>
        <member name="M:DAGDialogueSystem.DirectedAcyclicGraph.Node.GetEdgeAtIndex(System.Int32)">
            gets edge at index.
            <param name="i"> the index of needed edge </param>>
        </member>
        <member name="T:DAGDialogueSystem.DirectedAcyclicGraph.Edge">
            <summary>
            The arrow in between nodes.
            </summary>
        </member>
        <member name="T:DAGDialogueSystem.NodeTypes">
            <summary>
            Class containing enum of node types.
            </summary>
        </member>
        <member name="T:DAGDialogueSystem.NodeTypes.Type">
            <summary>
            Type of nodes, Dialogue, Prompt, Option, and Action.
            </summary>
        </member>
        <member name="F:DAGDialogueSystem.NodeTypes.Type.Dialogue">
            <summary>
            node dialogue line said by npc
            </summary>
        </member>
        <member name="F:DAGDialogueSystem.NodeTypes.Type.Prompt">
            <summary>
            node to initialize menu
            </summary>
        </member>
        <member name="F:DAGDialogueSystem.NodeTypes.Type.Option">
            <summary>
            node to add dialogue line to prompt node
            </summary>
        </member>
        <member name="F:DAGDialogueSystem.NodeTypes.Type.Action">
            <summary>
            node that runs an action
            </summary>
        </member>
    </members>
</doc>
